image: node:10

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/premiagi/premiagifrontend

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H 195.201.8.200 > ~/.ssh/known_hosts
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  #- git config --global user.email "user@example.com"
  #- git config --global user.name "User name "

stages:
  - build
  - deploy

compile:
  stage: build
  script:
    - npm install
    - npm run build
    - npm run generate

deploy:
  stage: deploy
  only:
    - master
  script:
    - ssh-keyscan -H 195.201.8.200 > ~/.ssh/known_hosts
    - ssh root@195.201.8.200 'cd /var/www/premiagifrontend && rm package-lock.json && git pull && npm i && npm run build && npm run generate && pm2 restart premiagifrontend'
    - echo "Deploy done"